 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
 
954 paquetes

 ** ¿Cuánto tiempo dura la captura?
 
56.149345 segundos

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?

Se ha realizado la captura en la máquina 192.168.1.34. Se trata de una IP privada, ya que pertenece al grupo 192.168 y ésta se encuentra reservada para direcciones privadas. A partir del paquete 26 empieza a hacer uso de STUN-NAT.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?

 UDP es claramente mayor (96.2%) y es consistente con la teoria, ya las transmisiones en tiempo real se encapsulan sobre UDP.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?

Podemos ver con bastante jerarquía el protocolo de RTP (84.6%) al haber un flujo de transmisión en tiempo real constante. También podemos observar que el codec H.261 es el formato de payload usado en esta comunicación.
Podemos observar además, protocolos Ethernet, IPv4, STUN-NAT, RTCP, DNS, TCP, HTTP, ICMP, ARP.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?

Aproximadamente, y una escala de intervalo de 1s, se envían paquetes SIP:
Desde el segundo 6 al segundo 8
Desde el segundo 13 al segundo 15 y de nuevo desde el segundo 15 al 17
Desde el segundo 37 al segundo 40
y en el segundo 54

 ** Y los paquetes con RTP, ¿cuándo se envían?

Se envían desde el segundo 16 al 38 (Visto en IO graph a una escala de intervalo de 1s)


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
 
Se utiliza DNS

 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
 
La dirección IP es 80.58.61.250

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
 
Devuelve la dirección IP 86.64.162.35

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?

Para saber el nombre asociado a esa IP. Sistema de resolución inverso de IPv4.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
 
Está pidiendo a http://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?
 
Ekiga

 ** ¿Qué devuelve el servidor?

83.36.48.212

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?

En mi caso me devuelve la dirección 80.103.79.14, que es la dirección con la que me ve la página web al estar detrás de un router NAT.


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.

Se hace uso para saber cuál es mi IP pública y qué puerto ha sido abierto por NAT para permitir el tráfico entrante. Además para poder saber que restricciones impone el NAT.

** ¿Estamos tras un NAT?

Si

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.

 ** ¿Qué dirección IP tiene el servidor Registrar?

86.64.162.35

 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
 
5060

 ** ¿Qué método SIP utiliza el UA para registrarse?

REGISTER

 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?

INVITE, ACK, CANCEL, BYE, OPTIONS, NOTIFY, MESSAGE, REFER.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
 
No

 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?

Cuando el SIP response code comience por 2XX.

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
 
Con el primer intento de registo obtenemos una respuesta de 401 No Autorizado mientras que con el segundo intento obtenemos la respuesta correcta 200 OK.
El primer REGISTER tiene una longitud de 523 bytes ya que no contiene en su Header el campo de Authorization mientras que el segundo, con una longitud de 712 bytes, si lo contiene.
 
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.

3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?

Si. Efectúa la llamada Gregorio Robles y su dirección sip:grex@ekiga.net

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?

El cuerpo de la trama describe la sesión por ende viene en formato SIP/SDP. Contiene la información de la conexión, atributos del medio y descripción del tipo multimedia empleado, en este caso un video.

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
 
No tiene éxito ya que obtiene una respuesta con el número de secuencia del INVITE con status 407 Autenticación de Proxy Requerida.

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?

En la segunda se envia la autorización del proxy previamente solicitada.

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?

Se utilizan los protocolos RTP y el H.261. El H.261 es un codec de vídeo para servicios audiovisuales y RTP es un protocolo para el envio de tramas en directo de información multimedia.

 ** ¿Cuál es el tamaño de paquete de los mismos?

El tamaño de los paquetes de RTP es de 214 bytes por paquete mientras que para los paquetes de H.261 su tamaño es variable.

 ** ¿Se utilizan bits de padding?

No ya que el bit de padding (relleno) está a 0

 ** ¿Cuál es la periodicidad de los paquetes que se envían?

aproximadamente 20ms - 22 ms

 ** ¿Cuántos bits/segundo estamos enviando?

Se envían entre 39 y 40 paquetes de RTP por segundo.
Cada uno tiene 214 bytes. De los cuales 160 bytes de PAYLOAD: 160x8 = 1280bits
La perodicidad = 0.02 segundos, entonces 1280bits/20/1000 sec = 64.000bits/sec
64KBytes per second.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?

Dos. Uno con salida desde el puerto 5014 y otro con salida desde el puerto 5010. Un flujo corresponderá al audio y el otro flujo al vídeo.

 ** ¿Cuántos paquetes se pierden?
 
Se pierden 2 paquetes de 194 enviados por el puerto 5014.
 
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
 
1290.479 para el puerto 5014 y 1290.444 para el puerto 5010
El valor de delta es la diferencia en tiempo entre el paquete actual y el paquete anterior del streaming, el max delta es así la mayor diferencia de tiempo.

 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?

El valor de jitter máximo es de 203.26ms y el valor de jitter medio es de 154.04ms. (Esto es el análisis en ambos flujos)

No son bueno valores de jitter ya que son muy elevados (la media permitida según internet es de 40ms) y por lo tanto no estamos ante una conversación de calidad.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?

Ambos valen 0

 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?

Si podemos, ya que tiene un retraso de 0.00 y además por su número de secuencia

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?

Hasta el paquete 246

 ** ¿A qué se debe el cambio tan brusco del jitter?

Se debe a la disminución de ancho de banda, que venía de manera constante y luego disminuyó (de 62.40 a 28.80). También se puede deber al cambio en los valores de Delta.

 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
 
 Si, ya que el valor de Delta me refleja el valor de llegada del paquete actual en comparación con el paquete anterior. Por ende si el valor de la delta aumenta el valor de jitter también lo hará.
 
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?

Mientras más tiempo tarde en llegarme un paquete mayor será su variabilidad (jitter) y me afectará al momento de tener una comunicación sin interrupciones.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?

Dura aproximadamente 25 segundos. Comienza en el segundo 14.59 y termina en el 39.22

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?

SSRC 0xBF4AFD37 y 0x43306582. Hay varios SSRCs ya que uno es para el audio y el otro es para el vide. No hay CSRCs.

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?

Utiliza el método BYE

 ** ¿En qué trama(s)?

Se envía en las tramas: 924, 925, 927, 933

 ** ¿Por qué crees que se envía varias veces?

Porque no recibe su ACK, bien sea por que el paquete se ha perdido o porque se ha vencido su plazo de expiración.

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?

Para poder borrar al usuario con el valor de expire a 0. Así lo hicimos en la práctica 4.

 ** ¿En qué trama sucede esto?

En la 950 y la 952

 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?

Se diferencia en el valor de campo expires. Antes tenía un valor de 3600 y ahora tiene un valor de 0.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?

DNS es necesario ya que haremos solicitudes al servidor de ekiga.net
STUN no es necesario ya que la dirección IP del laboratorio es una IP pública y no es necesario su traducción a través de STUN-NAT.

 ** ¿Son diferentes el registro y la descripción de la sesión?

Sí, ya que me registro con datos de un usuario distinto (mi usuario sip:felipesandovalsibada@ekiga.net) y la descripción de la sesión es distinta, ya que estamos llamando a un usuario distinto.


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?

Tenemos dos flujos. Uno de ida y otro de vuelta. En la captura anterior hacíamos una prueba de eco con nosotros mismos.

 ** ¿Cuál es su periodicidad?

20 ms apróx.

 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?

desde mi máquina (212.128.254.148) tengo un valor max de delta 30.58, valor medio del jitter: 3.018 y valor max jitter 4.632

desde sip:music@iptel.org (212.79.111.155) tengo un valor max de delta 65.56, valor medio del jitter: 1.312 y valor max jitter 4.632

 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.

Si se puede reproducir. Es música y se oye con buena calidad sin necesidad de retrasar el valor del jitter.

 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?

un servicio de música. Se ha llamado a sip:music@iptel.org

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
